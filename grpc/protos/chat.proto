syntax = "proto3";

package chat;

// Interface exported by the server.
service Chat {
    // A simple RPC.
    //
    // Signs in existing user and gets unread messages.
    rpc SignInExisting(Username) returns (Unreads) {}
    // Signs in new user and gets unread messages.
    rpc AddUser(Username) returns (Unreads) {}
    // Sends message to recipient with Username
    rpc Send(SendRequest) returns (Payload) {}
    // Response stream for client to receive messages from server
    rpc Listen(Username) returns (stream Payload) {}
    // rpc List(Wildcard) returns () {}
    // Logs out user and returns a confirmation response message
    rpc Logout(Username) returns (Payload) {}
    // Returns True if user is logged in, False o.w. 
    rpc IsLoggedIn(Username) returns (BoolPayload) {}
    // Deletes user and returns a confirmation response message
    rpc Delete(Username) returns (Payload) {}
}

message Username {
    string name = 1;
}

// If errorFlag == 1, unreads is an error message. 
// Else, unreads is a list of unread messages.
message Unreads {
    bool errorFlag = 1;
    string unreads = 2; 
}

// If sent from the sender's client to the server, Payload is a message to send.
// If sent from server to sender, Payload is sent confirmation.
// If sent from server to recipient, Payload is sent message. 
// Can also be error message or logout/delete confirmation.
message Payload {
    string msg = 1;
}

// Used to check from the client if a user is logged in
message BoolPayload {
    bool boolVal = 1;
}

message SendRequest {
    Username sender = 1;
    Username recipient = 2;
    Payload sentMsg = 3;
}


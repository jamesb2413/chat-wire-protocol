syntax = "proto3";

package chat;

// Interface exported by the server.
service Chat {
    // A simple RPC.
    //
    // Signs in existing user and gets unread messages.
    rpc SignInExisting(Username) returns (UnreadsOrError) {}
    // Signs in new user and gets unread messages.
    rpc AddUser(Username) returns (UnreadsOrError) {}
    // Sends message to recipient with Username
    rpc Send(Username, Username, RequestMessage) returns (ResponseMessage) {}
    // Bidirectional stream for client to receive messages from server
    rpc Listen(stream Username) returns (stream ResponseMessage) {}
    // rpc List(Wildcard) returns () {}
}

message Username {
    string name = 1;
}

// If errorFlag == 1, unreads is an error message. 
// Else, unreads is a list of unread messages.
message Unreads {
    bool errorFlag = 1;
    string unreads = 2; 
}

// Sent from the sender's client to the server. Payload is a message to send.
message RequestMessage {
    string payload = 1;
}

// Sent from the server to senders and recipients of messages.
// If errorFlag == 1, payload is an error message.
// Else, payload is a confirmation for the sender or a message for the recipient.
message ResponseMessage {
    bool errorFlag = 1;
    string payload = 2;
}


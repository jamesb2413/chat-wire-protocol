syntax = "proto3";

package chat;

// Interface exported by the server.
service Chat {
    // A simple RPC.
    //
    // Signs in existing user and gets unread messages.
    rpc SignInExisting(Username) returns (Unreads) {}
    // Signs in new user and gets unread messages.
    rpc AddUser(Username) returns (Unreads) {}
    // Sends message to recipient with Username
    rpc Send(SendRequest) returns (Payload) {}
    // Bidirectional stream for client to receive messages from server
    rpc Listen(stream Username) returns (stream Payload) {}
    // rpc List(Wildcard) returns () {}
}

message Username {
    string name = 1;
}

// If errorFlag == 1, unreads is an error message. 
// Else, unreads is a list of unread messages.
message Unreads {
    bool errorFlag = 1;
    string unreads = 2; 
}

// If sent from the sender's client to the server, Payload is a message to send.
// If sent from server to sender, Payload is sent confirmation.
// If sent from server to recipient, Payload is sent message. 
// Can also be error message.
message Payload {
    string msg = 1;
}

message SendRequest {
    Username sender = 1;
    Username recipient = 2;
    Payload sentMsg = 3;
}

